name: Build and deploy releases & rcs
on:
  push:
    branches:
      - main
      - next
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
      - name: Install pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest
      - name: Install bsdtar (and friends)
        # Just because it so nicely handles multiple formats, including zip
        run: |
          sudo apt-get install -y libarchive-tools
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Get release version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        # semantic-release:dry-run generates .version.local file
        # See: .releaserc.yaml
        run: pnpm run semantic-release:dry-run
      - name: Make sure .version.local exists
        run: |
          test -f .version.local
          cat .version.local
      - name: Build
        run: |
          echo "APP_VERSION=v$(cat .version.local)" >> .env.production.local
          echo "APP_LINK=${{ github.server_url }}/${{ github.repository }}/releases/tag/v$(cat .version.local)" >> .env.production.local
          echo "APP_IS_RELEASE=true" >> .env.production.local
          cat .env.production.local
          pnpm run build
      - name: Package
        run: |
          mkdir -p release.local
          bsdtar -acf release.local/oit-v$(cat .version.local).tar.gz -C dist .
          bsdtar -acf release.local/oit-v$(cat .version.local).zip -C dist .
      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: pnpm run semantic-release
      - name: Configure AWS credentials for S3 deployment
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      # aws cli is available already in GH image
      # see: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-software
      #      https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-Readme.md
      - name: Deploy to S3
        # Add to "release or rc path" and to root
        run: |
          aws s3 cp --recursive dist/ "s3://${{ secrets.AWS_BUCKET_NAME }}/$(if [ "${GITHUB_REF_NAME}" == "main" ]; then echo release; else echo rc; fi)/v$(cat .version.local)/"
          aws s3 cp --recursive dist/ "s3://${{ secrets.AWS_BUCKET_NAME }}/"
